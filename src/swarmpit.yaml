version: "3.7"

### INCLUDE BEGIN


x-twelve-factor-app:
  read_only: true
  logging:
    options:
      max-size: "200k"
      max-file: "2"
    driver: "json-file"
  deploy:
    labels:
    - "swarmpit.service.deployment.autoredeploy=true"
    restart_policy:
      delay: "2s"
    replicas: 2
    rollback_config:
      parallelism: 1
      delay: "1s"
    update_config:
      parallelism: 1
      delay: "10s"
      failure_action: "rollback"
    placement:
      constraints:
        - "node.role==worker"


x-logging:
  &default-logging
  options:
    max-size: "200k"
    max-file: "2"
  driver: "json-file"

x-twelve-deploy:
  &twelve-deploy
  labels:
  - "swarmpit.service.deployment.autoredeploy=true"
  restart_policy:
    delay: "2s"
  replicas: 2
  rollback_config:
    parallelism: 1
    delay: "1s"
  update_config:
    parallelism: 1
    delay: "10s"
    failure_action: "rollback"
  placement:
    constraints:
      - "node.role==worker"


### INCLUDE FINISH

services:
  swarmpit-app:
    image: "docker.io/swarmpit/swarmpit:latest"
    environment:
      - "SWARMPIT_DB=http://couchdb:5984"
      - "SWARMPIT_INFLUXDB=http://influxdb:8086"
    depends_on:
      - "influxdb"
      - "couchdb"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - "traefik-public"
      - "swarmpit-net"
    logging: *default-logging
    deploy:
      labels:
      - "swarmpit.service.deployment.autoredeploy=true"
      - "traefik.enable=true"
      - "traefik.tags=traefik-public"
      - "traefik.docker.network=traefik-public"
      - "traefik.frontend.rule=Host:swarmpit.gerf.net"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.port=8080"
      - "traefik.backend=swarmpit"
      replicas: 1
      placement:
        constraints:
          - "node.role == manager"
      update_config:
        failure_action: rollback
      resources:
        limits:
          memory: "300M"

  couchdb:
    image: "docker.io/couchdb:2.3"
    volumes:
      - "couchdb:/opt/couchdb/data"
    networks:
      - "swarmpit-net"
    logging: *default-logging
    deploy:
      labels:
      - "swarmpit.service.deployment.autoredeploy=true"
      - "traefik.enable=false"
      placement:
        constraints:
          - "node.labels.swarmpit.swarmpit-data == true"
      update_config:
        failure_action: "rollback"
      resources:
        limits:
          memory: "64M"

  influxdb:
    image: "docker.io/influxdb:1.7"
    volumes:
      - "influxdb:/var/lib/influxdb"
    networks:
      - "swarmpit-net"
    logging: *default-logging
    deploy:
      labels:
        - "swarmpit.service.deployment.autoredeploy=true"
        - "traefik.enable=false"
      placement:
        constraints:
          - "node.labels.swarmpit.swarmpit-logs==true"
      update_config:
        failure_action: rollback
      resources:
        limits:
          memory: "200M"

  swarmpit-agent:
    image: "docker.io/swarmpit/agent:latest"
    environment:
      - "DOCKER_API_VERSION=1.39"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - "swarmpit-net"
    logging: *default-logging
    deploy:
      labels:
        - "swarmpit.service.deployment.autoredeploy=true"
        - "traefik.enable=false"
        - "swarmpit.agent=true"
      mode: "global"
      update_config:
        failure_action: rollback
      resources:
        limits:
          memory: "20M"

networks:
  swarmpit-net:
    attachable: true
    driver: "overlay"
    name: "swarmpit-net"
  traefik-public:
    external: true

volumes:
  couchdb:
    name: "couchdb-data"
    driver: "local"
  influxdb:
    name: "swarmpit-logs"
    driver: "local"
