version: "3.7"

services:
  agent:
    image: "portainer/agent"
    environment:
      AGENT_CLUSTER_ADDR: tasks.agent
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/var/lib/docker/volumes:/var/lib/docker/volumes"
    networks:
      - "agent-network"
    logging:
      driver: "json-file"
      options:
        max-size: "400k"
        max-file: "4"
    deploy:
      mode: "global"
      resources:
        limits:
          cpus: "0.20"
          memory: "16M"
      restart_policy:
        condition: "on-failure"
        delay: "10s"
      placement:
        constraints:
          - "node.platform.os == linux"

  portainer:
    image: "portainer/portainer"
    command:
      - "--host=tcp://tasks.agent:9001"
      - "--tlsskipverify"
    networks:
      - "agent-network"
      - "traefik-public"
    volumes:
      - "portainer-data:/data:rw"
    logging:
      driver: "json-file"
      options:
        max-size: "400k"
        max-file: "4"
    deploy:
      labels:
      - "com.ouroboros.enable=true"
      - "traefik.enable=true"
      - "traefik.tags=traefik-public"
      - "traefik.docker.network=traefik-public"
      - "traefik.frontend.rule=Host:portainer.gerf.net"
      - "traefik.port=9000"
      - "traefik.backend=portainer"
      replicas: 1
      resources:
        limits:
          cpus: "0.50"
          memory: "128M"
      update_config:
        failure_action: "rollback"
      restart_policy:
        condition: "on-failure"
        delay: "2s"
      placement:
        constraints:
          - "node.role == manager"
          - "node.labels.portainer.portainer-data == true"

networks:
  agent-network:
    attachable: true
  traefik-public:
    external: true

volumes:
  portainer-data:
    name: "portainer-data"
